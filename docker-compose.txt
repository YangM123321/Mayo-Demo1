services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 10
      start_period: 10s
    ports:
      - "5432:5432"

  airflow-init:
    image: ${AIRFLOW_IMAGE_NAME}
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    command: >
      bash -lc "set -e; airflow db migrate"
    environment:
      AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: ${AIRFLOW__WEBSERVER__EXPOSE_CONFIG}
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on:
      postgres:
        condition: service_healthy
    volumes:   

      - ./airflow:/opt/airflow
      - ./:/opt/project

  


  airflow-webserver:
    image: ${AIRFLOW_IMAGE_NAME}
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    command: webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: ${AIRFLOW__WEBSERVER__EXPOSE_CONFIG}
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./airflow:/opt/airflow
      - ./:/opt/project
    working_dir: /opt/project

  airflow-scheduler:
    image: ${AIRFLOW_IMAGE_NAME}
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
      AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    volumes:
      - ./airflow:/opt/airflow
      - ./:/opt/project
    working_dir: /opt/project


  redpanda:
    image: redpandadata/redpanda:v24.1.7
    container_name: redpanda
    command: >
      redpanda start
      --overprovisioned
      --smp 1
      --memory 1G
      --node-id 0
      --check=false
      --kafka-addr INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      --advertise-kafka-addr INTERNAL://redpanda:9092,EXTERNAL://localhost:19092
      --rpc-addr 0.0.0.0:33145
      --advertise-rpc-addr redpanda:33145
    healthcheck:
      test: ["CMD", "rpk", "cluster", "info", "--brokers", "localhost:19092"]
      interval: 5s
      retries: 20
      start_period: 10s
    ports:
      - "9092:9092"     # internal for other containers
      - "19092:19092"   # external for host apps
      - "9644:9644"




  redpanda-console:
    image: redpandadata/console:v2.6.1
    container_name: redpanda-console
    environment:
      KAFKA_BROKERS: redpanda:9092
      REDPANDA_ADMIN_API: http://redpanda:9644
    command: ["/app/console", "--listen-address=0.0.0.0:8080"]
    depends_on:
      redpanda:
        condition: service_started


    ports:
      - "8081:8080"




